# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    if: ${{ github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
  
  release:
    if: ${{ github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Get release version string
      run: echo "version=$(./scripts/buildinfo.py short)" >> $GITHUB_OUTPUT
      id: version

    - name: Restore dependencies
      run: dotnet restore
    - name: Build solution and generate NuGet package
      run: | 
        dotnet build -c Release -p:AssemblyVersion=${{ steps.version.outputs.version }} -p:Version=${{ steps.version.outputs.version }} -p:NuGetVersion=${{ steps.version.outputs.version }}
        dotnet pack -c Release -p:AssemblyVersion=${{ steps.version.outputs.version }} -p:Version=${{ steps.version.outputs.version }} -p:NuGetVersion=${{ steps.version.outputs.version }}
          
    - name: Publish package to nuget
      run: dotnet nuget push ./**/Meshtastic.Cli.*.nupkg --skip-duplicate -k ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json

    - name: Publish self-contained win-x64
      run: dotnet publish ./Meshtastic.Cli/Meshtastic.Cli.csproj -c Release -r win-x64 --self-contained true
    
    - name: Publish self-contained osx-x64
      run: dotnet publish ./Meshtastic.Cli/Meshtastic.Cli.csproj -c Release -r osx-x64 --self-contained true

    - name: Publish self-contained linux-x64
      run: dotnet publish ./Meshtastic.Cli/Meshtastic.Cli.csproj -c Release -r linux-x64 --self-contained true

    - name: Publish self-contained linux-arm64
      run: dotnet publish ./Meshtastic.Cli/Meshtastic.Cli.csproj -c Release -r linux-arm64 --self-contained true -p:AssemblyVersion=${{ steps.version.outputs.version }} -p:Version=${{ steps.version.outputs.version }}
    #dotnet publish .\ProjectFolder\Project.csproj -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -o ReleaseFolderName -c Release -product-version
    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: true
        release_name: Meshtastic CLI ${{ steps.version.outputs.version }}
        tag_name: v${{ steps.version.outputs.version }}
        body: |
          Autogenerated by github action, developer should edit as required before publishing...
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Bump version.properties
      run: >-
        scripts/bump_version.py
        
    - name: Create version.properties pull request
      uses: peter-evans/create-pull-request@v3
      with:
        add-paths: |
          version.properties
